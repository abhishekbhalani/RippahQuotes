@model RippahQuotes.Models.Quotes

@{
    ViewBag.Title = @Html.DisplayFor(model => model.QuoteText);
}
<div class="display-quote">
    @{
        if (Model.QuoteEffect != null) { 
            List<string> effect_split = Model.QuoteEffect.Split(' ').ToList();
            switch (effect_split[0])
            {
                    case "marquee":
                        <marquee><h1 class="emphasise">"@Html.DisplayFor(model => model.QuoteText)"</h1></marquee>
                        break;
                    case "colour":
                    case "color":
                        if (effect_split.Count > 1) { 
                            <h1 class="emphasise" style="color : @effect_split[1]">"@Html.DisplayFor(model => model.QuoteText)"</h1>
                        }
                    break;
                
                    default:
                        <h1 class="emphasise">"@Html.DisplayFor(model => model.QuoteText)"</h1>
                    break;
                    


            }
        }
        else
        {
            <h1 class="emphasise">"@Html.DisplayFor(model => model.QuoteText)"</h1>
        }
}
    <p class="subquote">- @Html.DisplayFor(model => model.QuoteAuthor)</p>
    @*<div>
            <h4>Quotes</h4>
            <hr />
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Topic.TopicName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Topic.TopicName)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.QuoteText)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.QuoteText)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.QuoteAuthor)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.QuoteAuthor)
                </dd>

            </dl>
        </div>*@
    @if (Model.QuotePassword != null || User.Identity.IsAuthenticated)
    {
        <p>
            @Html.ActionLink("Delete", "Delete", new { id = Model.QuoteId })
        </p>
    }
    <p>
        @Html.ActionLink("View In Immersion Mode", "Marquee", new { id = Model.QuoteId })
    </p>
    @*<p>This Quote Has Received @Model.QuoteRating Quote Votes</p>
    <button class="vote">Vote For Dis Quote</button>*@
    <p>
        @Html.ActionLink("Return Home", "Index") <br />
        @Html.ActionLink("See More Quotes Like This", "Topics", new { id = Model.TopicId })
    </p>
    <div class="fb-share-button" data-href="http://ripperquotes.azurewebsites.net/Quotes/Details/@Model.QuoteId" data-layout="button_count"></div><br />
    <a class="twitter-share-button" href="https://twitter.com/share"
       data-related="twitterdev"
       data-size="medium"
       data-count="none">
        Tweet
    </a>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script type="text/javascript">
        $(".vote").click(function () {
            $.post("../../api/Votes", { id: "@Model.QuoteId" }, function () {
                alert("You have voted");
            }).fail(function () {
                alert("Fuck");
            });
        });
    </script>
</div>
