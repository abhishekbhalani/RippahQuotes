@model RippahQuotes.Models.Quotes
@using Recaptcha.Web.Mvc;

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
@if (ViewBag.Worked == "False")
{
    <h1>How about you actually post a ripper quote this time...</h1>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @*@Html.LabelFor(model => model.QuoteText, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label for="QuoteText" class="control-label col-md-2">Saying</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.QuoteText, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QuoteText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QuoteAuthor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QuoteAuthor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QuoteAuthor, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TopicId, "Topic", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TopicId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TopicId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.QuotePassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QuotePassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QuotePassword, "", new { @class = "text-danger" })
                @*<br />
                @Html.Recaptcha(theme: Recaptcha.Web.RecaptchaTheme.Clean)*@
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Is this a truly 'magnificent' saying?", htmlAttributes: new { @class = "control-label col-md-2"})
            <div class="col-md-10">
                <input name="verify" type="checkbox" class="center-check"/>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
@*TODO: Add Hidden Submit Button*@