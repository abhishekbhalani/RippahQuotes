@model IEnumerable<RippahQuotes.Models.Topic>

@{
    ViewBag.Title = "Topics";
}
<!--<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.TopicName)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.TopicName)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.TopicId }) |
            @Html.ActionLink("Details", "Details", new { id=item.TopicId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.TopicId })
        </td>
    </tr>
}

</table>
    -->
@{
    var items = Model.ToList();
    string filter = Request.QueryString["filter"];
    var recents = ViewBag.RecentQuotes;
    switch (filter)
    {
        case "Top":
            items = items.OrderBy(q => q.TopicAmount).ToList();
            break;
        default:
            break;
    }
}
<div class="topic-header">
    <h1 class="emphasise">Topics</h1>
    @Html.ActionLink("Create New Topic", "Create", new { }, new { @class = "createlink" })
    <br />
    @{
        if (filter != null)
        {
            <i>Filtered by @filter topics</i>
        }
        else
        {
            @Html.ActionLink("Sort By Top", "Index", new { filter = "Top" }, new { @class = "createlink" })
        }
    }
</div>
<hr />

<section class="topic-container">
@for (var i = items.Count - 1; i >= 0; i--)
{
    <div class="topic-element">
        <a class="enter-quote" href="/Quotes/Topics/@items[i].TopicId"><h2 class="topics">@Html.DisplayFor(modelItem => items[i].TopicName)</h2></a>
        @if (items[i].TopicDescription != null)
        {
            <i>@items[i].TopicDescription</i>
        }
    </div>
}
</section>